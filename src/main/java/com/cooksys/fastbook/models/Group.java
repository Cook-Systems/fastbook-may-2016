package com.cooksys.fastbook.models;

// Generated May 4, 2016 2:37:24 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Group generated by hbm2java
 */
@Entity
@Table(name = "group", catalog = "fastbook")
public class Group implements java.io.Serializable {

	private Integer id;
	private User user;
	private String name;
	private int owner;
	private Set<PostGroup> postGroups = new HashSet<PostGroup>(0);
	private Set<GroupUser> groupUsers = new HashSet<GroupUser>(0);

	public Group()
	{
	}

	public Group(User user, String name, int owner)
	{
		this.user = user;
		this.name = name;
		this.owner = owner;
	}

	public Group(User user, String name, int owner, Set<PostGroup> postGroups,
			Set<GroupUser> groupUsers)
	{
		this.user = user;
		this.name = name;
		this.owner = owner;
		this.postGroups = postGroups;
		this.groupUsers = groupUsers;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId()
	{
		return this.id;
	}

	public void setId(Integer id)
	{
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser()
	{
		return this.user;
	}

	public void setUser(User user)
	{
		this.user = user;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName()
	{
		return this.name;
	}

	public void setName(String name)
	{
		this.name = name;
	}

	@Column(name = "owner", nullable = false)
	public int getOwner()
	{
		return this.owner;
	}

	public void setOwner(int owner)
	{
		this.owner = owner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "group")
	public Set<PostGroup> getPostGroups()
	{
		return this.postGroups;
	}

	public void setPostGroups(Set<PostGroup> postGroups)
	{
		this.postGroups = postGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "group")
	public Set<GroupUser> getGroupUsers()
	{
		return this.groupUsers;
	}

	public void setGroupUsers(Set<GroupUser> groupUsers)
	{
		this.groupUsers = groupUsers;
	}

}
